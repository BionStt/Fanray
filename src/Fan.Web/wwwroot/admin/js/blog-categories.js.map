{"version":3,"sources":["../../../Areas/Admin/js/blog-categories.js"],"names":["Vue","component","mixins","categoriesMixin","data","dialogVisible","title","description","upsertText","catEditing","errMsg","computed","disableUpsertButton","trim","length","addButtonVisible","payload","methods","closeDialog","addCat","editCat","cat","deleteCat","confirm","axios","delete","id","$root","headers","then","idx","categories","findIndex","c","defaultCat","find","defaultCategoryId","count","splice","toast","catch","toastError","setDefault","post","viewPosts","url","window","location","href","insertCat","resp","push","sortCategories","err","response","errorMessage","updateCat","sort","a","b","titleA","toUpperCase","titleB"],"mappings":"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","file":"blog-categories.js","sourcesContent":["ï»¿/**\r\n * \r\n */\r\nVue.component('blog-categories', {\r\n    mixins: [categoriesMixin],\r\n    data: () => ({\r\n        dialogVisible: false,\r\n        title: '',\r\n        description: '',\r\n        upsertText: 'Add',\r\n        catEditing: null,\r\n        errMsg: '',\r\n    }),\r\n    computed: {\r\n        disableUpsertButton() {\r\n            return this.title.trim().length <= 0;\r\n        },\r\n        addButtonVisible() {\r\n            return this.upsertText === 'Add';\r\n        },\r\n        payload() {\r\n            return {\r\n                title: this.title,\r\n                description: this.description,\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        closeDialog() {\r\n            this.dialogVisible = false;\r\n            this.title = '';\r\n            this.description = '';\r\n            this.errMsg = '';\r\n        },\r\n        // when user clicks on the plus fab to add a new category\r\n        addCat() {\r\n            this.dialogVisible = true;\r\n            this.title = '';\r\n            this.description = '';\r\n            this.upsertText = 'Add';\r\n        },\r\n        // when user clicks on the Edit from the dropdown\r\n        editCat(cat) {\r\n            this.dialogVisible = true;\r\n            this.catEditing = cat;\r\n            this.upsertText = 'Edit';\r\n            this.title = cat.title;\r\n            this.description = cat.description;\r\n        },\r\n        // when user clicks on the Delete from the dropdown\r\n        deleteCat(cat) {\r\n            console.log('cat being deleted: ', cat);\r\n            if (confirm(`Are you sure you want to permanently delete '${cat.title}'?`)) {\r\n                axios.delete(`/admin/categories?id=${cat.id}`, this.$root.headers)\r\n                    .then(resp => {\r\n                        let idx = this.categories.findIndex(c => c.id === cat.id);\r\n                        let defaultCat = this.categories.find(c => c.id === this.defaultCategoryId);\r\n                        defaultCat.count += cat.count;\r\n                        this.categories.splice(idx, 1);\r\n                        this.$root.toast('Category deleted.');\r\n                    })\r\n                    .catch(err => {\r\n                        this.$root.toastError('Delete category failed.');\r\n                        console.error(err);\r\n                    });\r\n            }\r\n        },\r\n        // when user clicks on the Set as Default from the dropdown\r\n        setDefault(id) {\r\n            axios.post(`/admin/categories?handler=default&id=${id}`, null, this.$root.headers)\r\n                .then(resp => {\r\n                    this.defaultCategoryId = id;\r\n                })\r\n                .catch(err => {\r\n                    this.$root.toast('Set default category failed.', 'red');\r\n                    console.log(err);\r\n                });\r\n        },\r\n        // when user clicks on the View Posts from the dropdown\r\n        viewPosts(url) {\r\n            window.location.href = url; // relative \r\n        },\r\n        // when user clicks on the Add button on the dialog\r\n        insertCat() {\r\n            axios.post('/admin/categories', this.payload, this.$root.headers)\r\n                .then(resp => {\r\n                    this.closeDialog();\r\n                    this.categories.push(resp.data);\r\n                    this.sortCategories();\r\n                    this.$root.toast('New category added.');\r\n                })\r\n                .catch(err => {\r\n                    this.errMsg = err.response.data[0].errorMessage;\r\n                    this.$root.toast('Add category failed.', 'red');\r\n                });\r\n        },\r\n        // when user clicks on the Update button on the dialog\r\n        updateCat() {\r\n            this.payload.id = this.catEditing.id;\r\n            this.payload.count = this.catEditing.count;\r\n            axios.post('/admin/categories?handler=update', this.payload, this.$root.headers)\r\n                .then(resp => {\r\n                    this.closeDialog();\r\n                    // replace\r\n                    let idx = this.categories.findIndex(c => c.id === resp.data.id);\r\n                    this.categories[idx] = resp.data;\r\n                    // sort\r\n                    this.sortCategories();\r\n                    this.$root.toast('Category updated.');\r\n                })\r\n                .catch(err => {\r\n                    this.errMsg = err.response.data[0].errorMessage;\r\n                    this.$root.toast('Update category failed.', 'red');\r\n                });\r\n        },\r\n        sortCategories() {\r\n            this.categories.sort((a, b) => {\r\n                var titleA = a.title.toUpperCase();\r\n                var titleB = b.title.toUpperCase();\r\n                if (titleA < titleB) {\r\n                    return -1;\r\n                }\r\n                if (titleA > titleB) {\r\n                    return 1;\r\n                }\r\n\r\n                return 0; // equal\r\n            });\r\n        }\r\n    }\r\n});"]}