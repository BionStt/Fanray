{"version":3,"sources":["../../../Areas/Admin/js/blog-media.js"],"names":["Vue","component","template","mixins","blogMediaMixin","props","data","editDialogVisible","progressDialog","pageNumber","selectedImages","selectedImageIdx","errMsg","isEditor","mounted","initWindowDnd","mode","initImages","computed","showMoreVisible","count","images","length","leftArrowVisible","rightArrowVisible","methods","window","addEventListener","document","querySelector","style","visibility","opacity","e","preventDefault","self","dragFilesUpload","dataTransfer","files","formData","FormData","Array","from","keys","map","x","append","sendImages","chooseFilesUpload","input","createElement","setAttribute","click","onchange","i","axios","post","$root","headers","then","resp","unshift","toast","errorMessage","catch","get","medias","selectImage","image","idx","findIndex","img","id","selected","push","splice","leftArrow","rightArrow","showMore","pageSize","url","found","some","editImages","deleteImages","confirm","selectedCount","ids","toastError","updateImage","closeEditDialog"],"mappings":"AAGAA,GAAG,CAACC,SAAJ,CAAc,YAAd,CAA4B,CACxBC,QAAQ,CAAE,sBADc,CAExBC,MAAM,CAAE,CAACC,cAAD,CAFgB,CAGxBC,KAAK,CAAE,CAAC,MAAD,CAHiB,CAIxBC,IAAI,CAAE,KAAO,CACTC,iBAAiB,GADR,CAETC,cAAc,GAFL,CAGTC,UAAU,CAAE,CAHH,CAITC,cAAc,CAAE,EAJP,CAKTC,gBAAgB,CAAE,CALT,CAMTC,MAAM,CAAE,EANC,CAOTC,QAAQ,GAPC,CAAP,CAJkB,CAaxBC,OAAO,EAAG,CACN,KAAKC,aAAL,EADM,CAGY,QAAd,QAAKC,IAHH,GAIF,KAAKH,QAAL,GAJE,CAMF,KAAKI,UAAL,EANE,CAQT,CArBuB,CAsBxBC,QAAQ,CAAE,CACNC,eAAe,CAAE,UAAY,CACzB,MAAO,MAAKC,KAAL,CAAa,KAAKC,MAAL,CAAYC,MACnC,CAHK,CAINC,gBAAgB,CAAE,UAAY,CAC1B,MAAoC,EAA7B,MAAKb,cAAL,CAAoBY,MAApB,EAA0D,CAAxB,MAAKX,gBACjD,CANK,CAONa,iBAAiB,CAAE,UAAY,CAC3B,MAAoC,EAA7B,MAAKd,cAAL,CAAoBY,MAApB,EAAkC,KAAKX,gBAAL,CAAwB,KAAKD,cAAL,CAAoBY,MAApB,CAA2B,CAC/F,CATK,CAtBc,CAiCxBG,OAAO,CAAE,CAILV,aAAa,EAAG,CACZW,MAAM,CAACC,gBAAP,CAAwB,WAAxB,CAAqC,UAAa,CAC9CC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAApC,CAA0CC,UAA1C,CAAuD,EADT,CAE9CH,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAApC,CAA0CE,OAA1C,CAAoD,CACvD,CAHD,CADY,CAMZN,MAAM,CAACC,gBAAP,CAAwB,WAAxB,CAAqC,SAAUM,CAAV,CAAa,CAC9CA,CAAC,CAACC,cAAF,EAD8C,CAE9CN,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAApC,CAA0CC,UAA1C,CAAuD,QAFT,CAG9CH,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAApC,CAA0CE,OAA1C,CAAoD,CACvD,CAJD,CANY,CAYZN,MAAM,CAACC,gBAAP,CAAwB,UAAxB,CAAoC,SAAUM,CAAV,CAAa,CAC7CA,CAAC,CAACC,cAAF,EAD6C,CAE7CN,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAApC,CAA0CC,UAA1C,CAAuD,EAFV,CAG7CH,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAApC,CAA0CE,OAA1C,CAAoD,CACvD,CAJD,CAZY,CAkBZ,GAAIG,CAAAA,CAAI,CAAG,IAAX,CACAT,MAAM,CAACC,gBAAP,CAAwB,MAAxB,CAAgC,SAAUM,CAAV,CAAa,CACzCA,CAAC,CAACC,cAAF,EADyC,CAEzCN,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAApC,CAA0CC,UAA1C,CAAuD,QAFd,CAGzCH,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAApC,CAA0CE,OAA1C,CAAoD,CAHX,CAIzCG,CAAI,CAACC,eAAL,CAAqBH,CAAC,CAACI,YAAF,CAAeC,KAApC,CACH,CALD,CAMH,CA7BI,CAkCLF,eAAe,CAACE,CAAD,CAAQ,CACnB,KAAK9B,cAAL,GADmB,CAGnB,KAAM+B,CAAAA,CAAQ,CAAG,GAAIC,CAAAA,QAArB,CACKF,CAAK,CAAChB,MAJQ,GAKnBmB,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACH,CAAK,CAAChB,MAAP,CAAL,CAAoBqB,IAApB,EAAX,EACMC,GADN,CACUC,CAAC,EAAI,CACNN,CAAQ,CAACO,MAAT,CAAgB,QAAhB,CAA0BR,CAAK,CAACO,CAAD,CAA/B,CACH,CAHN,CALmB,CAUnB,KAAKE,UAAL,CAAgBR,CAAhB,CAVmB,CAWtB,CA7CI,CAiDLS,iBAAiB,EAAG,CAChB,KAAMC,CAAAA,CAAK,CAAGrB,QAAQ,CAACsB,aAAT,CAAuB,OAAvB,CAAd,CACAD,CAAK,CAACE,YAAN,CAAmB,MAAnB,CAA2B,MAA3B,CAFgB,CAGhBF,CAAK,CAACE,YAAN,CAAmB,QAAnB,CAA6B,SAA7B,CAHgB,CAIhBF,CAAK,CAACE,YAAN,CAAmB,UAAnB,CAA+B,IAA/B,CAJgB,CAKhBF,CAAK,CAACG,KAAN,EALgB,CAMhBH,CAAK,CAACI,QAAN,CAAiB,IAAM,CACnB,KAAK7C,cAAL,GADmB,CAEnB,KAAM+B,CAAAA,CAAQ,CAAG,GAAIC,CAAAA,QAArB,CACA,IAAK,GAAIc,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,CAAK,CAACX,KAAN,CAAYhB,MAAhC,CAAwCgC,CAAC,EAAzC,CACIf,CAAQ,CAACO,MAAT,CAAgB,QAAhB,CAA0BG,CAAK,CAACX,KAAN,CAAYgB,CAAZ,CAA1B,EAGJ,KAAKP,UAAL,CAAgBR,CAAhB,CACH,CACJ,CAhEI,CAsELQ,UAAU,CAACR,CAAD,CAAW,CACjBgB,KAAK,CAACC,IAAN,CAAW,4BAAX,CAAyCjB,CAAzC,CAAmD,KAAKkB,KAAL,CAAWC,OAA9D,EACKC,IADL,CACUC,CAAI,EAAI,CACV,GAA8B,CAA1B,CAAAA,CAAI,CAACtD,IAAL,CAAUe,MAAV,CAAiBC,MAArB,CAAiC,CAC7B,IAAK,GAAIgC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGM,CAAI,CAACtD,IAAL,CAAUe,MAAV,CAAiBC,MAArC,CAA6CgC,CAAC,EAA9C,CACI,KAAKjC,MAAL,CAAYwC,OAAZ,CAAoBD,CAAI,CAACtD,IAAL,CAAUe,MAAV,CAAiBiC,CAAjB,CAApB,EAKJ,KAAKlC,KAAL,EAAcwC,CAAI,CAACtD,IAAL,CAAUe,MAAV,CAAiBC,MAPF,CAU7B,KAAKmC,KAAL,CAAWK,KAAX,CAAiB,iBAAjB,CACH,CACGF,CAAI,CAACtD,IAAL,CAAUyD,YAbJ,GAakB,KAAKnD,MAAL,CAAcgD,CAAI,CAACtD,IAAL,CAAUyD,YAb1C,EAcV,KAAKvD,cAAL,GACH,CAhBL,EAiBKwD,KAjBL,CAiBW,IAAO,CACV,KAAKxD,cAAL,GADU,CAEV,KAAKiD,KAAL,CAAWK,KAAX,CAAiB,sBAAjB,CAAyC,KAAzC,CAEH,CArBL,CAsBH,CA7FI,CAiGL7C,UAAU,EAAG,CAETsC,KAAK,CAACU,GAAN,gCAAeN,IAAf,CAAoBC,CAAI,EAAI,CAExB,KAAKvC,MAAL,CAAcuC,CAAI,CAACtD,IAAL,CAAU4D,MAFA,CAGxB,KAAK9C,KAAL,CAAawC,CAAI,CAACtD,IAAL,CAAUc,KAC1B,CAJD,EAIG4C,KAJH,CAIS,UAJT,CAKH,CAxGI,CA6GLG,WAAW,CAACC,CAAD,CAAQ,CACf,GAAIC,CAAAA,CAAG,CAAG,KAAK3D,cAAL,CAAoB4D,SAApB,CAA8BC,CAAG,EAAIA,CAAG,CAACC,EAAJ,GAAWJ,CAAK,CAACI,EAAtD,CAAV,CAEY,CAAC,CAAT,GAAAH,CAHW,EAUXD,CAAK,CAACK,QAAN,GAVW,CAWX,KAAK/D,cAAL,CAAoBgE,IAApB,CAAyBN,CAAzB,CAXW,GAIXA,CAAK,CAACK,QAAN,GAJW,CAKX,KAAK/D,cAAL,CAAoBiE,MAApB,CAA2BN,CAA3B,CAAgC,CAAhC,CALW,CAelB,CA5HI,CAgILO,SAAS,EAAG,CACR,KAAKjE,gBAAL,EAEH,CAnII,CAoILkE,UAAU,EAAG,CACT,KAAKlE,gBAAL,EAEH,CAvII,CA2ILmE,QAAQ,EAAG,CACP,KAAKrE,UAAL,EADO,CAGH,KAAKY,MAAL,CAAYC,MAAZ,CAAqB,KAAKyD,QAHvB,EAGiC,KAAKtE,UAAL,EAHjC,CAIP,GAAIuE,CAAAA,CAAG,CAAI,wCAAuC,KAAKvE,UAAW,EAAlE,CACA8C,KAAK,CAACU,GAAN,CAAUe,CAAV,EAAerB,IAAf,CAAoBC,CAAI,EAAI,CAExB,IAAK,GAEGqB,CAAAA,CAFH,CAAI3B,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGM,CAAI,CAACtD,IAAL,CAAUgB,MAA9B,CAAsCgC,CAAC,EAAvC,CAEQ2B,CAFR,CAEgB,KAAK5D,MAAL,CAAY6D,IAAZ,CAAiB,SAAUX,CAAV,CAAe,CACxC,MAAOA,CAAAA,CAAG,CAACC,EAAJ,GAAWZ,CAAI,CAACtD,IAAL,CAAUgD,CAAV,EAAakB,EAClC,CAFW,CAFhB,CAMSS,CANT,EAOQ,KAAK5D,MAAL,CAAYqD,IAAZ,CAAiBd,CAAI,CAACtD,IAAL,CAAUgD,CAAV,CAAjB,CAEX,CAXD,EAWGU,KAXH,CAWS,UAXT,CAYH,CA5JI,CAgKLmB,UAAU,EAAG,CACT,KAAK5E,iBAAL,GACH,CAlKI,CAmKL6E,YAAY,EAAG,CACX,GAAIC,OAAO,CAAC,2HAAD,CAAX,CAA0I,CAGtI,KAAMC,CAAAA,CAAa,CAAG,KAAK5E,cAAL,CAAoBY,MAA1C,CACA,GAAIiE,CAAAA,CAAG,CAAG,EAAV,CACA,IAAK,GAAIjC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGgC,CAApB,CAAmChC,CAAC,EAApC,CACIiC,CAAG,CAACb,IAAJ,CAAS,KAAKhE,cAAL,CAAoB4C,CAApB,EAAuBkB,EAAhC,EAKJjB,KAAK,CAACC,IAAN,+BAAgB+B,CAAhB,CAAqB,KAAK9B,KAAL,CAAWC,OAAhC,EACKC,IADL,CACU,IAAQ,CAGV,IAAK,GAAIL,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGgC,CAApB,CAAmChC,CAAC,EAApC,CAAwC,CACpC,GAAIe,CAAAA,CAAG,CAAG,KAAKhD,MAAL,CAAYiD,SAAZ,CAAsBC,CAAG,EAAIA,CAAG,CAACC,EAAJ,GAAW,KAAK9D,cAAL,CAAoB4C,CAApB,EAAuBkB,EAA/D,CAAV,CACA,KAAKnD,MAAL,CAAYsD,MAAZ,CAAmBN,CAAnB,CAAwB,CAAxB,CACH,CAED,KAAK3D,cAAL,CAAsB,EARZ,CAaV,KAAKU,KAAL,EAAckE,CAbJ,CAgBV,KAAK7B,KAAL,CAAWK,KAAX,CAAiB,gBAAjB,CACH,CAlBL,EAmBKE,KAnBL,CAmBW,IAAO,CACV,KAAKP,KAAL,CAAW+B,UAAX,CAAsB,sBAAtB,CAEH,CAtBL,CAuBH,CACJ,CAvMI,CA2MLC,WAAW,EAAG,CAEVlC,KAAK,CAACC,IAAN,+BAAgB,KAAK9C,cAAL,CAAoB,KAAKC,gBAAzB,CAAhB,CAA4D,KAAK8C,KAAL,CAAWC,OAAvE,EACKC,IADL,CACU,IAAQ,CACV,KAAKF,KAAL,CAAWK,KAAX,CAAiB,gBAAjB,CACH,CAHL,EAIKE,KAJL,CAIW,IAAO,CACV,KAAKP,KAAL,CAAW+B,UAAX,CAAsB,sBAAtB,CAEH,CAPL,CAQH,CArNI,CAyNLE,eAAe,EAAG,CACd,KAAK/E,gBAAL,CAAwB,CADV,CAEd,KAAKJ,iBAAL,GACH,CA5NI,CAjCe,CAA5B,C","sourcesContent":["ï»¿/**\r\n * The component for Admin/Pages/Media.cshtml\r\n */\r\nVue.component('blog-media', {\r\n    template: '#blog-media-template',\r\n    mixins: [blogMediaMixin],\r\n    props: ['mode'],\r\n    data: () => ({\r\n        editDialogVisible: false,\r\n        progressDialog: false,\r\n        pageNumber: 1,\r\n        selectedImages: [],\r\n        selectedImageIdx: 0,\r\n        errMsg: '',\r\n        isEditor: false,\r\n    }),\r\n    mounted() {\r\n        this.initWindowDnd();\r\n         \r\n        if (this.mode === 'editor') {\r\n            this.isEditor = true;\r\n            console.log(\"media gallery in editor mode.\");\r\n            this.initImages();\r\n        }\r\n    },\r\n    computed: {\r\n        showMoreVisible: function () {\r\n            return this.count > this.images.length;\r\n        },\r\n        leftArrowVisible: function () {\r\n            return this.selectedImages.length > 1 && this.selectedImageIdx > 0;\r\n        },\r\n        rightArrowVisible: function () {\r\n            return this.selectedImages.length > 1 && this.selectedImageIdx < this.selectedImages.length-1;\r\n        },\r\n    },\r\n    methods: {\r\n        /**\r\n         * Initialize window drag drop events.\r\n         */\r\n        initWindowDnd() {\r\n            window.addEventListener(\"dragenter\", function (e) {\r\n                document.querySelector(\"#dropzone\").style.visibility = \"\";\r\n                document.querySelector(\"#dropzone\").style.opacity = 1;\r\n            });\r\n\r\n            window.addEventListener(\"dragleave\", function (e) {\r\n                e.preventDefault();\r\n                document.querySelector(\"#dropzone\").style.visibility = \"hidden\";\r\n                document.querySelector(\"#dropzone\").style.opacity = 0;\r\n            });\r\n\r\n            window.addEventListener(\"dragover\", function (e) {\r\n                e.preventDefault();\r\n                document.querySelector(\"#dropzone\").style.visibility = \"\";\r\n                document.querySelector(\"#dropzone\").style.opacity = 1;\r\n            });\r\n\r\n            let self = this;\r\n            window.addEventListener(\"drop\", function (e) {\r\n                e.preventDefault();\r\n                document.querySelector(\"#dropzone\").style.visibility = \"hidden\";\r\n                document.querySelector(\"#dropzone\").style.opacity = 0;\r\n                self.dragFilesUpload(e.dataTransfer.files);\r\n            });\r\n        },\r\n        /**\r\n         * Drag files to drop over browser to upload.\r\n         * @param {any} files\r\n         */\r\n        dragFilesUpload(files) {\r\n            this.progressDialog = true;\r\n\r\n            const formData = new FormData();\r\n            if (!files.length) return;\r\n            Array.from(Array(files.length).keys())\r\n                 .map(x => {\r\n                     formData.append('images', files[x]);\r\n                 });\r\n\r\n            this.sendImages(formData);\r\n        },\r\n        /**\r\n         * Click Upload button to choose files to upload.\r\n         */\r\n        chooseFilesUpload() {\r\n            const input = document.createElement('input');\r\n            input.setAttribute('type', 'file');\r\n            input.setAttribute('accept', 'image/*');\r\n            input.setAttribute('multiple', null);\r\n            input.click();\r\n            input.onchange = () => {\r\n                this.progressDialog = true;\r\n                const formData = new FormData();\r\n                for (let i = 0; i < input.files.length; i++) {\r\n                    formData.append('images', input.files[i]);\r\n                }\r\n\r\n                this.sendImages(formData);\r\n            };\r\n        },\r\n        /**\r\n         * Send files to server. The API returns ImageData with a list of media just uploaded and errorMessage if\r\n         * there is any media not able to be uploaded.\r\n         * @param {any} formData\r\n         */\r\n        sendImages(formData) {\r\n            axios.post('/admin/media?handler=image', formData, this.$root.headers)\r\n                .then(resp => {\r\n                    if (resp.data.images.length > 0) {\r\n                        for (var i = 0; i < resp.data.images.length; i++) {\r\n                            this.images.unshift(resp.data.images[i]);\r\n                        }\r\n\r\n                        // inc total number of image by the number of added images\r\n                        console.log(this.count);\r\n                        this.count += resp.data.images.length;\r\n                        console.log(this.count);\r\n\r\n                        this.$root.toast('Image uploaded.');\r\n                    }\r\n                    if (resp.data.errorMessage) this.errMsg = resp.data.errorMessage;\r\n                    this.progressDialog = false;\r\n                })\r\n                .catch(err => {\r\n                    this.progressDialog = false;\r\n                    this.$root.toast('Image upload failed.', 'red');\r\n                    console.log(err);\r\n                });\r\n        },\r\n        /**\r\n         * Retrieve first page of images in editor mode.\r\n         */\r\n        initImages() {\r\n            let url = `/admin/media?handler=images`;\r\n            axios.get(url).then(resp => {\r\n                console.log(\"resp.data\", resp.data);\r\n                this.images = resp.data.medias;\r\n                this.count = resp.data.count;\r\n            }).catch(err => console.log(err));\r\n        },\r\n        /**\r\n         * Clicks on an image to select it.\r\n         * @param {any} image\r\n         */\r\n        selectImage(image) {\r\n            let idx = this.selectedImages.findIndex(img => img.id === image.id);\r\n\r\n            if (idx !== -1) {\r\n                image.selected = false;\r\n                this.selectedImages.splice(idx, 1);\r\n                console.log(\"selectedImageIdx: \", this.selectedImageIdx);\r\n                console.log(\"de-selected image: \", image);\r\n            }\r\n            else {\r\n                image.selected = true;\r\n                this.selectedImages.push(image);\r\n                console.log(\"selectedImageIdx: \", this.selectedImageIdx);\r\n                console.log(\"selected image: \", image);\r\n            }\r\n        },\r\n        /**\r\n         * When you select and edit multiple images, you can click arrows to traverse among them.\r\n         */\r\n        leftArrow() {\r\n            this.selectedImageIdx--;\r\n            console.log('leftArrow selectedImageIdx: ', this.selectedImageIdx)\r\n        },\r\n        rightArrow() {\r\n            this.selectedImageIdx++;\r\n            console.log('rightArrow selectedImageIdx: ', this.selectedImageIdx)\r\n        },\r\n        /**\r\n         * Clicks show more button to return next page of images.\r\n         */\r\n        showMore() {\r\n            this.pageNumber++; \r\n            // if user deletes an image, this will ensure to re-get current page before moving to next page\r\n            if (this.images.length < this.pageSize) this.pageNumber--; \r\n            let url = `/admin/media?handler=more&pageNumber=${this.pageNumber}`;\r\n            axios.get(url).then(resp => {\r\n                // returned data is the list of images\r\n                for (var i = 0; i < resp.data.length; i++) {\r\n                    // first make sure returned item is not already on the page\r\n                    var found = this.images.some(function (img) {\r\n                        return img.id === resp.data[i].id;\r\n                    });\r\n\r\n                    if (!found) \r\n                        this.images.push(resp.data[i]); // only append to images if not found\r\n                }\r\n            }).catch(err => console.log(err));\r\n        },\r\n        /**\r\n         * When user selects one or more images and clicks on edit button.\r\n         */\r\n        editImages() {\r\n            this.editDialogVisible = true;\r\n        },\r\n        deleteImages() {\r\n            if (confirm('Are you sure you want to delete the image(s)? They will no longer appear anywhere on your website. This cannot be undone!')) {\r\n                console.log('deleting image: ', this.selectedImage);\r\n\r\n                const selectedCount = this.selectedImages.length;\r\n                let ids = [];\r\n                for (var i = 0; i < selectedCount; i++) {\r\n                    ids.push(this.selectedImages[i].id);\r\n                }\r\n                console.log(ids);\r\n\r\n                let url = `/admin/media?handler=delete`;\r\n                axios.post(url, ids, this.$root.headers)\r\n                    .then(resp => {\r\n                        console.log(\"before delete images length: \",this.images.length);\r\n                        // remove selected images from images since they are deleted\r\n                        for (var i = 0; i < selectedCount; i++) {\r\n                            let idx = this.images.findIndex(img => img.id === this.selectedImages[i].id);\r\n                            this.images.splice(idx, 1);\r\n                        }\r\n                        // set selectedImages to empty\r\n                        this.selectedImages = [];\r\n\r\n                        // dec total number of images\r\n                        console.log(\"after delete images length: \",this.images.length);\r\n                        console.log(\"total count before delete: \", this.count);\r\n                        this.count -= selectedCount;\r\n                        console.log(\"total count after delete: \", this.count);\r\n\r\n                        this.$root.toast('Image deleted.');\r\n                    })\r\n                    .catch(err => {\r\n                        this.$root.toastError('Image delete failed.');\r\n                        console.log(err);\r\n                    });\r\n            }\r\n        },\r\n        /**\r\n         * Updates an image info, it does not close the dialog.\r\n         */\r\n        updateImage() {\r\n            let url = `/admin/media?handler=update`;\r\n            axios.post(url, this.selectedImages[this.selectedImageIdx], this.$root.headers)\r\n                .then(resp => {\r\n                    this.$root.toast('Image updated.');\r\n                })\r\n                .catch(err => {\r\n                    this.$root.toastError('Image update failed.');\r\n                    console.log(err);\r\n                });\r\n        },\r\n        /**\r\n         * When user closes the edit dialog by hitting esc or close.\r\n         */\r\n        closeEditDialog() {\r\n            this.selectedImageIdx = 0;\r\n            this.editDialogVisible = false;\r\n        },\r\n    },\r\n});"],"file":"blog-media.js"}